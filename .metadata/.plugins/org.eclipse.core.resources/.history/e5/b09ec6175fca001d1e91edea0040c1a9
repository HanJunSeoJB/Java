package dynamic_beat_1;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.util.ArrayList;

import javax.swing.ImageIcon;

public class Game extends Thread {
	public static int adjust = 50;
	
	private Image gameInfo = new ImageIcon(Main.class.getResource("../IMAGES/game_info.png")).getImage();
	private Image JudgementLine = new ImageIcon(Main.class.getResource("../IMAGES/judgementLine.png")).getImage();
	private Image noteRoute = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	private Image noteRouteLine = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteLine.png")).getImage();
	private Image noteRouteWHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	private Image noteRouteAHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	private Image noteRouteSHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	private Image noteRouteDHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	private Image noteRouteSpace1Hit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	private Image noteRouteSpace2Hit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	private Image noteRouteEHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	private Image noteRouteRHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	
	private String titleName;
	private String difficulty;
	private String musicTitle;
	private Music gameMusic;
	
	ArrayList<Note> noteList = new ArrayList<>();
	
	public Game(String titleName, String difficulty, String musicTitle) {
		this.titleName = titleName;
		this.difficulty = difficulty;
		this.musicTitle = musicTitle;
		gameMusic = new Music(this.musicTitle, false);
		gameMusic.start();
		
	}
	
	public void screenDraw(Graphics2D g) {
		g.drawImage(noteRouteWHit, 240 + adjust, 30, null);
		g.drawImage(noteRouteAHit, 356 + adjust, 30, null);
		g.drawImage(noteRouteSHit, 472 + adjust, 30, null);
		g.drawImage(noteRouteSpace1Hit, 588 + adjust, 30, null);
		g.drawImage(noteRouteSpace2Hit, 703 + adjust, 30, null);
		g.drawImage(noteRouteDHit, 819 + adjust, 30, null);
		g.drawImage(noteRouteEHit, 935 + adjust, 30, null);
		g.drawImage(noteRouteRHit, 1051 + adjust, 30, null);
		
		g.drawImage(noteRoute, 240 + adjust, 30, null);
		g.drawImage(noteRoute, 356 + adjust, 30, null);
		g.drawImage(noteRoute, 472 + adjust, 30, null);
		g.drawImage(noteRoute, 588 + adjust, 30, null);
		g.drawImage(noteRoute, 703 + adjust, 30, null);
		g.drawImage(noteRoute, 819 + adjust, 30, null);
		g.drawImage(noteRoute, 935 + adjust, 30, null);
		g.drawImage(noteRoute, 1051 + adjust, 30, null);
		g.drawImage(gameInfo, 0, 840, null);
		g.drawImage(JudgementLine, 0, 760, null);
		for(int i = 0; i < noteList.size(); i++) {
			Note note = noteList.get(i);
			note.screenDraw(g);
		}
		
		g.setColor(Color.white);
		g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
		g.setFont(new Font("Arial", Font.BOLD, 30));
		g.drawString(titleName, 20, 880);
		g.drawString(difficulty, 1190, 880);
		g.setFont(new Font("Elephant", Font.BOLD, 30));
		g.drawString("000000", 565, 880);
		g.drawString("W", 240 + adjust + 40, 790);
		g.drawString("A", 356 + adjust + 40, 790);
		g.drawString("S", 472 + adjust + 40, 790);
		g.drawString("Space bar", 600 + adjust, 790);
		g.drawString("D", 819 + adjust + 40, 790);
		g.drawString("E", 935 + adjust + 40, 790);
		g.drawString("R", 1051 + adjust + 40, 790);
		g.setFont(new Font("Arial", Font.BOLD, 30));
		
	}
	
	public void pressS() {
		noteRouteSHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteHit.png")).getImage();
		new Music("drum1.mp3", false).start();
	}
	public void realeaseS() {
		noteRouteSHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	}
	public void pressW() {
		noteRouteWHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteHit.png")).getImage();
		new Music("drum1.mp3", false).start();
	}
	public void realeaseW() {
		noteRouteWHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	}
	public void pressA() {
		noteRouteAHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteHit.png")).getImage();
		new Music("drum1.mp3", false).start();
	}
	public void realeaseA() {
		noteRouteAHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	}
	public void pressD() {
		noteRouteDHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteHit.png")).getImage();
		new Music("drum1.mp3", false).start();
	}
	public void realeaseD() {
		noteRouteDHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	}
	public void pressSpace() {
		noteRouteSpace1Hit = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteHit.png")).getImage();
		noteRouteSpace2Hit = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteHit.png")).getImage();
		new Music("drum1.mp3", false).start();
	}
	public void realeaseSpace() {
		noteRouteSpace1Hit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
		noteRouteSpace2Hit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	}
	public void pressE() {
		noteRouteEHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteHit.png")).getImage();
		new Music("drum1.mp3", false).start();
	}
	public void realeaseE() {
		noteRouteEHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	}
	public void pressR() {
		noteRouteRHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRouteHit.png")).getImage();
		new Music("drum1.mp3", false).start();
	}
	public void realeaseR() {
		noteRouteRHit = new ImageIcon(Main.class.getResource("../IMAGES/noteRoute.png")).getImage();
	}
	
	@Override
	public void run() {
		dropNotes();
	}
	
	public void close() {
		gameMusic.close();
		this.interrupt();
	}
	
	public void dropNotes() {
		Beat[] beats = null;
		if(titleName.equals("Haru")) {
			int startTime = 1000 - Main.REACH_TIME * 1000;
			beats = new Beat[] {
					new Beat(startTime, "Space"),
			};
		}
		else if(titleName.equals("Time")) {
			int startTime = 1000;
			beats = new Beat[] {
					new Beat(startTime, "Space"),
			};
		}
		else if(titleName.equals("We Higher")) {
			int startTime = 1000;
			beats = new Beat[] {
					new Beat(startTime, "Space"),
			};
		}
		int i = 0;
		while(true) {
			if(beats[i].getTime() <= gameMusic.getTime()) {
				Note note = new Note(beats[i].getNoteName());
				note.start();
				noteList.add(note);
				i++;
			}
		}
	}
}
